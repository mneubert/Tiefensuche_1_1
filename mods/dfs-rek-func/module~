module

  export 
    
      digraph-dfs-func

  refinement
    representation of operations  

      deptSearchF# implements deptSearchF;

    implementation

    import 

     	union_bool_graph

    procedures

       deptSearchProcF#   elem , list , list , list , digraph  : list ;

    variables 
		open : list;
		close : list;
		bbool : bool;
		path : list;
     
    declaration


 deptSearchF#(a, z, g; y)
          begin
            var open = [] + a ', close = [], path = [] in
            begin
	      y := [] ;
              if (not open = [] ¸ not z = []) then 
	      begin
                  deptSearchProcF#(open .first, close, z, y, g; path);
		  y := path 
	      end
             end 
           end ;

       deptSearchProcF#(a, close, z, y, g; path) 
         begin
           var open = [] in
           begin
	     path := [];
	     y :=  y +  a '  ;
             if a ² z then 
               begin
                 path := y
               end
             else 
               begin
                 close := a ' + close ;
                 open :=  set2list(outsortSuccs(a, list2set(close), g)) + open .rest ;
               
                 while not open = [] do 
                   begin
                      deptSearchProcF#(open .first, (open + close), z, y, g; path) ;
                   end
               end
            end
          end  


end module
