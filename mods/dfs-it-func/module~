module

  export 
    
      digraph-dfs-func

  refinement
    representation of operations  

      deptSearchF# implements deptSearchF;

    implementation

    import 

     	union_bool_graph


    variables 
		open : list;
		close : list;
		bbool : bool;
		path : list;
     
    declaration


 deptSearchF#(a, z, g; y)
         begin	
	var open =  [] + a , close =  [], n0 = 0, a0 = a
	in 
	  begin 
            bbool := false;
            n0 := getM( a , g );
              if µ(a ' = [] ¹ z = []) then
              begin
                  if a ² z then
		  begin
	            bbool := true        
		  end
                  else
                  begin
                  while n0 > 0  ¸ bbool = false ¸ open Ü [] do
	          begin
		    	a0 := open .first ;
			if a0 ² z then
		    	begin
	              		bbool := true        
		    	end
			else
			begin
                        n0 := n0 - 1 ;
                    	close := a0 ' + close;
                    	open :=  set2list(outsortSuccs(a0, list2set(close), g)) + open.rest;
			end
                  end;
		  if n0 = 0 then
			begin
				bbool := false;
			end
                end
              end
	  end		
	end


end module